<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.14.RELEASE</version>
		<relativePath/>
	</parent>
	<groupId>it.polste.attsw</groupId>
	<artifactId>teammates-manager-backend</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>teammates-manager-backend</name>
	<description>Backend project for attsw exam</description>

	<properties>
		<java.version>1.8</java.version>

		<skip.unit-tests>false</skip.unit-tests>
		<skip.integration-tests>false</skip.integration-tests>

		<jacoco.version>0.8.5</jacoco.version>
		<heroku.version>3.0.2</heroku.version>
		<coveralls.version>4.3.0</coveralls.version>
		<sonar.version>3.7.0.1746</sonar.version>
		<mysql.version>8.0.20</mysql.version>
		<frabric8.docker.version>0.33.0</frabric8.docker.version>
		<pitest.version>1.5.2</pitest.version>

		<sonar.coverage.jacoco.xmlReportPaths>
			${project.reporting.outputDirectory}/jacoco/jacoco.xml
		</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports,
			${project.build.directory}/failsafe-reports
		</sonar.junit.reportPaths>
		<sonar.sources>
			pom.xml,
			${project.build.sourceDirectory}
		</sonar.sources>
		<sonar.tests>
			${project.build.testSourceDirectory},
			${basedir}/src/it/java
		</sonar.tests>
		<sonar.coverage.exclusions>
			**/*Application.*,
			**/models/*
		</sonar.coverage.exclusions>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>${jacoco.version}</version>
		</dependency>
		<dependency>
			<groupId>io.fabric8</groupId>
			<artifactId>docker-maven-plugin</artifactId>
			<version>${frabric8.docker.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.pitest</groupId>
			<artifactId>pitest-parent</artifactId>
			<version>${pitest.version}</version>
			<type>pom</type>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${frabric8.docker.version}</version>
				<configuration>
					<showLogs>true</showLogs>
					<images>
						<image>
							<alias>db</alias>
							<external>
								<type>compose</type>
								<baseDir>${project.basedir}/docker</baseDir>
								<composeFile>docker-compose.yml</composeFile>
							</external>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>startDB</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stopDB</id>
						<phase>verify</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skip.unit-tests}</skipTests>
					<includes>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<configuration>
							<skipTests>${skip.integration-tests}</skipTests>
							<includes>
								<include>**/*ApplicationTests.java</include>
								<include>**/*IT.java</include>
							</includes>
						</configuration>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.heroku.sdk</groupId>
				<artifactId>heroku-maven-plugin</artifactId>
				<version>${heroku.version}</version>
				<configuration>
					<appName>teammates-manager-backend</appName>
					<includeTarget>false</includeTarget>
					<includes>
						<include>${project.build.directory}/${project.build.finalName}.jar</include>
					</includes>
					<jdkVersion>1.8</jdkVersion>
					<processTypes>
						<web>java $JAVA_OPTS -jar -Dserver.port=$PORT -Dspring.profiles.active=prod	target/${project.build.finalName}.jar</web>
					</processTypes>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls.version}</version>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>jacoco</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<configuration>
							<excludes>
								<exclude>**/*Application.*</exclude>
								<exclude>**/models/*</exclude>
								<exclude>it.polste.attsw.teammatesmanagerbackend.models.*</exclude>
							</excludes>
						</configuration>
						<executions>
							<execution>
								<configuration>
									<propertyName>surefireArgLine</propertyName>
								</configuration>
								<goals>
									<goal>prepare-agent</goal>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>@{surefireArgLine}</argLine>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<version>${pitest.version}</version>
						<executions>
							<execution>
								<id>mutation-testing</id>
								<phase>test</phase>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<skip>true</skip>
							<targetClasses>
<!--								<param>it.polste.attsw.teammatesmanagerbackend.services.*</param>-->
<!--								<param>it.polste.attsw.teammatesmanagerbackend.repositories.*</param>-->
<!--								<param>it.polste.attsw.teammatesmanagerbackend.controllers.*</param>-->
							</targetClasses>
							<targetTests>
								<param>**/*Test.java</param>
							</targetTests>
							<mutators>
								<mutator>DEFAULTS</mutator>
								<mutator>NON_VOID_METHOD_CALLS</mutator>
							</mutators>
							<mutationThreshold>80</mutationThreshold>
						</configuration>
					</plugin>
				</plugins>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.eluder.coveralls</groupId>
							<artifactId>coveralls-maven-plugin</artifactId>
							<version>${coveralls.version}</version>
						</plugin>
						<plugin>
							<groupId>org.sonarsource.scanner.maven</groupId>
							<artifactId>sonar-maven-plugin</artifactId>
							<version>${sonar.version}</version>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>
